![image.png](https://pic.leetcode-cn.com/1631617839-HpwMzZ-image.png)

抽象图一二ij

* 

```
class Solution {
public:
    int maxDistToClosest(vector<int>& seats) {
        int ans=0;
        int firstOneIdx=-1,lastOneIdx=-1;
        for(int i=0;i<seats.size();i++){
            if(seats[i]==0){
                int j=i;
                i++;
                while(i<seats.size()&&seats[i]==0)i++;

                int cnt=i-j;
                ans=max(ans,(cnt+1)/2);
            }
            if(i<seats.size()){
                if(firstOneIdx==-1)firstOneIdx=i;
                lastOneIdx=i;
            }
        }
        ans=max(max(ans,firstOneIdx),(int)seats.size()-lastOneIdx-1);
        return ans;
    }
};
```

